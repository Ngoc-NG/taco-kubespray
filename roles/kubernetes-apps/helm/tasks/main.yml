---
- name: Helm | Make sure HELM_HOME directory exists
  file: path={{ helm_home_dir }} state=directory

- name: Helm | Set up helm launcher
  shell: |
    /bin/bash -c "{{local_release_dir}}/{{downloads.helm.dest}} --version {{ helm_version }}"

- name: Helm | Lay Down Helm Manifests (RBAC)
  template:
    src: "{{item.file}}"
    dest: "{{kube_config_dir}}/{{item.file}}"
  with_items:
    - {name: tiller, file: tiller-sa.yml, type: sa}
    - {name: tiller, file: tiller-clusterrolebinding.yml, type: clusterrolebinding}
  register: manifests
  when: dns_mode != 'none' and inventory_hostname == groups['kube-master'][0] and rbac_enabled

- name: Helm | Apply Helm Manifests (RBAC)
  kube:
    name: "{{item.item.name}}"
    namespace: "{{ system_namespace }}"
    kubectl: "{{bin_dir}}/kubectl"
    resource: "{{item.item.type}}"
    filename: "{{kube_config_dir}}/{{item.item.file}}"
    state: "latest"
  with_items: "{{ manifests.results }}"
  when: dns_mode != 'none' and inventory_hostname == groups['kube-master'][0] and rbac_enabled

- name: Helm | Install/upgrade helm
  command: "{{ bin_dir }}/helm init --upgrade --tiller-image={{ tiller_image_repo }}:{{ tiller_image_tag }}"

- name: Helm | Patch tiller deployment for RBAC
  command: "{{bin_dir}}/kubectl patch deployment tiller-deploy -p '{\"spec\":{\"template\":{\"spec\":{\"serviceAccount\":\"tiller\"}}}}' -n {{ system_namespace }}"
  when: rbac_enabled

- name: Helm | Set up bash completion
  shell: "umask 022 && {{ bin_dir }}/helm completion >/etc/bash_completion.d/helm.sh"
  when: ( not ansible_os_family in ["CoreOS", "Container Linux by CoreOS"]
          and helm_version < "v2.4.0" )

- name: Helm | Set up bash completion
  shell: "umask 022 && {{ bin_dir }}/helm completion bash >/etc/bash_completion.d/helm.sh"
  when: ( not ansible_os_family in ["CoreOS", "Container Linux by CoreOS"]
          and helm_version >= "v2.4.0" )

- name: WeaveScope | copy yaml
  template:
    src: weave_scope.j2
    dest: "{{ kube_config_dir }}/weave_scope.yml"
    force: true
    owner: root
    mode: 0755
  run_once: yes
  when: weave_scope_enabled and inventory_hostname == groups['kube-master'][0]

- name: WeaveScope | install weavescope
  command: "{{ bin_dir }}/kubectl apply --namespace {{ system_namespace }} -f {{ kube_config_dir }}/weave_scope.yml"
  run_once: yes
  when: weave_scope_enabled and inventory_hostname == groups['kube-master'][0]
